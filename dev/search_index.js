var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ProjMPSs","category":"page"},{"location":"#ProjMPSs","page":"Home","title":"ProjMPSs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ProjMPSs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ProjMPSs]","category":"page"},{"location":"#ProjMPSs.BlockedMPS","page":"Home","title":"ProjMPSs.BlockedMPS","text":"BlockedMPS is a structure that holds multiple MPSs (ProjMPS) that are associated with different non-overlapping projectors.\n\n\n\n\n\n","category":"type"},{"location":"#ProjMPSs.ProjMPS","page":"Home","title":"ProjMPSs.ProjMPS","text":"An MPS with a projector.\n\n\n\n\n\n","category":"type"},{"location":"#ProjMPSs.Projector","page":"Home","title":"ProjMPSs.Projector","text":"A projector represents a projection of a tensor from a set of its indices to integers. Each index is projected to a positive integer.\n\n\n\n\n\n","category":"type"},{"location":"#Base.:&-Tuple{ProjMPSs.Projector, ProjMPSs.Projector}","page":"Home","title":"Base.:&","text":"a & b represents the intersection of the indices that a and b are projected at.\n\n\n\n\n\n","category":"method"},{"location":"#Base.:+-Tuple{ProjMPSs.BlockedMPS, ProjMPSs.BlockedMPS}","page":"Home","title":"Base.:+","text":"Add two BlockedMPS objects.\n\nIf the two projects have the same projectors in the same order, the resulting BlockedMPS will have the same projectors in the same order. By default, we use directsum algorithm to compute the sum and no truncation is performed.\n\n\n\n\n\n","category":"method"},{"location":"#Base.:<-Tuple{ProjMPSs.Projector, ProjMPSs.Projector}","page":"Home","title":"Base.:<","text":"a < b means that a is projected at a subset of the indices that b is projected at.\n\n\n\n\n\n","category":"method"},{"location":"#Base.:|-Tuple{ProjMPSs.Projector, ProjMPSs.Projector}","page":"Home","title":"Base.:|","text":"a | b represents the union of the indices that a and b are projected at.\n\nIf a is projected at inds=1 and b is not projected for the same inds, then a | b is not projected for inds.\n\n\n\n\n\n","category":"method"},{"location":"#Base.getindex-Tuple{ProjMPSs.BlockedMPS, Integer}","page":"Home","title":"Base.getindex","text":"Indexing for BlockedMPS. This is deprecated and will be removed in the future.\n\n\n\n\n\n","category":"method"},{"location":"#Base.keys-Tuple{ProjMPSs.BlockedMPS}","page":"Home","title":"Base.keys","text":"Return the keys, i.e., projectors of the BlockedMPS.\n\n\n\n\n\n","category":"method"},{"location":"#Base.length-Tuple{ProjMPSs.BlockedMPS}","page":"Home","title":"Base.length","text":"Get the number of sites in the BlockedMPS\n\n\n\n\n\n","category":"method"},{"location":"#Base.values-Tuple{ProjMPSs.BlockedMPS}","page":"Home","title":"Base.values","text":"Return the values, i.e., ProjMPS of the BlockedMPS.\n\n\n\n\n\n","category":"method"},{"location":"#ITensors.SiteTypes.siteinds-Tuple{ProjMPSs.BlockedMPS}","page":"Home","title":"ITensors.SiteTypes.siteinds","text":"Return the site indices of the BlockedMPS. The site indices are returned as a vector of sets, where each set corresponds to the site indices at each site.\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.norm-Tuple{ProjMPSs.BlockedMPS}","page":"Home","title":"LinearAlgebra.norm","text":"Return the norm of the BlockedMPS.\n\n\n\n\n\n","category":"method"},{"location":"#ProjMPSs.extractdiagonal-Tuple{ProjMPSs.BlockedMPS, Any}","page":"Home","title":"ProjMPSs.extractdiagonal","text":"Extract diagonal of the BlockedMPS for s, s', ... for a given site index s, where s must have a prime level of 0.\n\n\n\n\n\n","category":"method"},{"location":"#ProjMPSs.projcontract-Tuple{AbstractVector{ProjMPSs.ProjMPS}, AbstractVector{ProjMPSs.ProjMPS}, ProjMPSs.Projector}","page":"Home","title":"ProjMPSs.projcontract","text":"Project two ProjMPS objects to proj before contracting them. The results are summed.\n\n\n\n\n\n","category":"method"},{"location":"#ProjMPSs.projcontract-Tuple{ProjMPSs.ProjMPS, ProjMPSs.ProjMPS, ProjMPSs.Projector}","page":"Home","title":"ProjMPSs.projcontract","text":"Project two ProjMPS objects to proj before contracting them.\n\n\n\n\n\n","category":"method"},{"location":"#Quantics.automul-Tuple{ProjMPSs.BlockedMPS, ProjMPSs.BlockedMPS}","page":"Home","title":"Quantics.automul","text":"By default, elementwise multiplication will be performed.\n\n\n\n\n\n","category":"method"},{"location":"#Quantics.makesitediagonal-Tuple{ProjMPSs.BlockedMPS, Any}","page":"Home","title":"Quantics.makesitediagonal","text":"Make the BlockedMPS diagonal for a given site index s by introducing a dummy index s'.\n\n\n\n\n\n","category":"method"},{"location":"#Quantics.rearrange_siteinds-Tuple{ProjMPSs.BlockedMPS, Any}","page":"Home","title":"Quantics.rearrange_siteinds","text":"Rearrange the site indices of the BlockedMPS according to the given order. If nessecary, tensors are fused or split to match the new order.\n\n\n\n\n\n","category":"method"}]
}
